# Generated by Django 3.2.5 on 2021-09-13 12:14

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigNfce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producao', models.BooleanField(default=False, verbose_name='Indica se a empresa irá emitir em produção ou homologação')),
                ('email_envio', models.BooleanField(default=False, verbose_name='Habilita o envio de emails automaticamente para todas as emissões realizadas por essa Empresa.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigNfe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producao', models.BooleanField(default=False, verbose_name='Indica se a empresa irá emitir em produção ou homologação')),
                ('impressao_fcp', models.BooleanField(default=False, verbose_name='Habilite essa opção para impressão automática do fundo de combate à pobreza (FCP), na impressão (DANFE).')),
                ('impressao_partilha', models.BooleanField(default=False, verbose_name='Habilite essa opção para impressão automática da partilha de ICMS, na impressão (DANFE).')),
                ('dfe_ativo', models.BooleanField(default=False, verbose_name='Habilita o fluxo de consulta de notas destinadas (DF-e), e importação automática. Somente é possível habilitar esta opção se o NFE estiver ativo.')),
                ('email_envio', models.BooleanField(default=False, verbose_name='Habilita o envio de emails automaticamente para todas as emissões realizadas por essa Empresa.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigNfse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producao', models.BooleanField(default=False, verbose_name='Indica se a empresa irá emitir em produção ou homologação')),
                ('email_envio', models.BooleanField(default=False, verbose_name='Habilita o envio de emails automaticamente, para todas as emissões realizadas por essa Empresa.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_ult_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data da Última Atualização')),
                ('cpf_cnpj', models.CharField(max_length=20, unique=True, verbose_name='CPF/CNPJ')),
                ('inscricao_municipal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Inscrição Municipal')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=30, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.TextField(max_length=100, verbose_name='Razão Social')),
                ('nome_fantasia', models.TextField(blank=True, max_length=100, null=True, verbose_name='Nome Fantasia')),
                ('certificado', models.CharField(blank=True, max_length=30, null=True, verbose_name='Certificado')),
                ('simples_nacional', models.BooleanField(default=False, verbose_name='Optante do simples nacional')),
                ('regime_tributario', models.IntegerField(choices=[(0, 'Nenhum'), (1, 'Simples Nacional'), (2, 'Simples Nacional - Excesso'), (3, 'Normal - Lucro Presumido'), (4, 'Normal - Lucro Real')], verbose_name='Regime Tributário')),
                ('incentivo_fiscal', models.BooleanField(default=False, verbose_name='Possui algum tipo de incentivo fiscal?')),
                ('incentivo_cultural', models.BooleanField(default=False, verbose_name='É incentivador cultural?')),
                ('regime_tributario_especial', models.IntegerField(choices=[(0, 'Sem Regime Tributário Especial'), (1, 'Micro Empresa Municipal'), (2, 'Estimativa'), (3, 'Sociedade de Profissionais'), (4, 'Cooperativa'), (5, 'Microempresário Individual - MEI'), (6, 'Microempresa ou Pesqueno Porte - ME EPP')], verbose_name='Regime tributário adotado pela empresa')),
            ],
        ),
        migrations.AlterField(
            model_name='conta',
            name='endereco_uf',
            field=models.CharField(choices=[('AC', 'Ac'), ('AL', 'Al'), ('AM', 'Am'), ('AP', 'Ap'), ('BA', 'Ba'), ('CE', 'Ce'), ('DF', 'Df'), ('ES', 'Es'), ('GO', 'Go'), ('MA', 'Ma'), ('MG', 'Mg'), ('MS', 'Ms'), ('MT', 'Mt'), ('PA', 'Pa'), ('PB', 'Pb'), ('PE', 'Pe'), ('PI', 'Pi'), ('PR', 'Pr'), ('RJ', 'Rj'), ('RN', 'Rn'), ('RO', 'Ro'), ('RR', 'Rr'), ('RS', 'Rs'), ('SC', 'Sc'), ('SE', 'Se'), ('SP', 'Sp'), ('TO', 'Tp')], max_length=2, verbose_name='UF'),
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ddd', models.CharField(blank=True, max_length=2, null=True, verbose_name='DDD')),
                ('numero', models.CharField(max_length=14, verbose_name='Número de Telefone')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telefones', to='core.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='Sefaz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_codigo_seguranca_contribuinte', models.CharField(max_length=100, verbose_name='Número de identificação CSC')),
                ('codigo_seguranca_contribuinte', models.CharField(max_length=100, verbose_name='Código do CSC')),
                ('config_nfce', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sefaz', to='core.confignfce')),
            ],
        ),
        migrations.CreateModel(
            name='Rps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lote', models.IntegerField(blank=True, null=True, verbose_name='Lote inicial que será utilizado no rps')),
                ('config_nfse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rps', to='core.confignfse')),
            ],
        ),
        migrations.CreateModel(
            name='Prefeitura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=50, verbose_name='Login de autenticação com a prefeitura, caso não utilize certificado')),
                ('senha', models.CharField(max_length=50, verbose_name='Senha de autenticação com a prefeitura, caso não utilize certificado')),
                ('receita_bruta', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Receita Bruta')),
                ('lei', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lei')),
                ('data_inicio', models.DateField(verbose_name='Data Ínicio')),
                ('config_nfse', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prefeitura', to='core.confignfse')),
            ],
        ),
        migrations.CreateModel(
            name='Numeracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(verbose_name='Número Inicial')),
                ('serie', models.IntegerField(verbose_name='Série')),
                ('config_nfce', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='numeracao', to='core.confignfce')),
                ('config_nfe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='numeracao', to='core.confignfe')),
                ('rps', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='numeracao', to='core.rps')),
            ],
        ),
        migrations.CreateModel(
            name='Nfse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=False, verbose_name='Indica se o documento está ativo para emissão. Para emissão de nota de serviço, incluindo Brasília, ative esse documento.')),
                ('tipo_contrato', models.IntegerField(choices=[(0, 'Bilhetagem'), (1, 'Ilimitado')], verbose_name='Tipo de Contrato')),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nfse', to='core.empresa')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Nfe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=False, verbose_name='Indica se o documento está ativo para emissão. Para emissão de nota de serviço, incluindo Brasília, ative esse documento.')),
                ('tipo_contrato', models.IntegerField(choices=[(0, 'Bilhetagem'), (1, 'Ilimitado')], verbose_name='Tipo de Contrato')),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nfe', to='core.empresa')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Nfce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=False, verbose_name='Indica se o documento está ativo para emissão. Para emissão de nota de serviço, incluindo Brasília, ative esse documento.')),
                ('tipo_contrato', models.IntegerField(choices=[(0, 'Bilhetagem'), (1, 'Ilimitado')], verbose_name='Tipo de Contrato')),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nfce', to='core.empresa')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_logradouro', models.CharField(choices=[('Alameda', 'Alameda'), ('Avenida', 'Avenida'), ('Chácara', 'Chacara'), ('Colônia', 'Colonia'), ('Condomínio', 'Condominio'), ('Estância', 'Estancia'), ('Estrada', 'Estrada'), ('Fazenda', 'Fazenda'), ('Praça', 'Praca'), ('Prolongamento', 'Prolongamento'), ('Rodovia', 'Rodovia'), ('Rua', 'Rua'), ('Sítio', 'Sitio'), ('Travessa', 'Travessa'), ('Vicinal', 'Vicinal')], max_length=15, verbose_name='Tipo do Logradouro')),
                ('logradouro', models.CharField(max_length=100, verbose_name='Logradouro')),
                ('numero', models.CharField(max_length=15, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=50, null=True, verbose_name='Complemento')),
                ('tipo_bairro', models.CharField(blank=True, choices=[('Bairro', 'Bairro'), ('Bosque', 'Bosque'), ('Chácara', 'Chacara'), ('Conjunto', 'Conjunto'), ('Desmembramento', 'Desmembramento'), ('Distrito', 'Distrito'), ('Favela', 'Favela'), ('Fazenda', 'Fazenda'), ('Gleba', 'Gleba'), ('Horto', 'Horto'), ('Jardim', 'Jardim'), ('Loteamento', 'Loteamento'), ('Núcleo', 'Nucleo'), ('Parque', 'Parque'), ('Residencial', 'Residencial'), ('Sítio', 'Sitio'), ('Tropical', 'Tropical'), ('Vila', 'Vila'), ('Zona', 'Zona'), ('Centro', 'Centro'), ('Setor', 'Setor')], max_length=15, null=True, verbose_name='Tipo do Bairro')),
                ('bairro', models.CharField(blank=True, max_length=80, null=True, verbose_name='Nome do Bairro')),
                ('codigo_pais', models.CharField(default='1058', max_length=10, verbose_name='Código do País')),
                ('descricao_pais', models.CharField(default='Brasil', max_length=50, verbose_name='Nome do País')),
                ('codigo_cidade', models.CharField(max_length=8, verbose_name='Código IBGE da cidade')),
                ('descricao_cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome da cidade')),
                ('estado', models.CharField(blank=True, choices=[('AC', 'Ac'), ('AL', 'Al'), ('AM', 'Am'), ('AP', 'Ap'), ('BA', 'Ba'), ('CE', 'Ce'), ('DF', 'Df'), ('ES', 'Es'), ('GO', 'Go'), ('MA', 'Ma'), ('MG', 'Mg'), ('MS', 'Ms'), ('MT', 'Mt'), ('PA', 'Pa'), ('PB', 'Pb'), ('PE', 'Pe'), ('PI', 'Pi'), ('PR', 'Pr'), ('RJ', 'Rj'), ('RN', 'Rn'), ('RO', 'Ro'), ('RR', 'Rr'), ('RS', 'Rs'), ('SC', 'Sc'), ('SE', 'Se'), ('SP', 'Sp'), ('TO', 'Tp')], max_length=2, null=True, verbose_name='Sigla do Estado')),
                ('cep', models.CharField(max_length=8, verbose_name='CEP')),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='endereco', to='core.empresa')),
            ],
        ),
        migrations.AddField(
            model_name='confignfse',
            name='nfse',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='core.nfse'),
        ),
        migrations.AddField(
            model_name='confignfe',
            name='nfe',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='core.nfe'),
        ),
        migrations.AddField(
            model_name='confignfce',
            name='nfce',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='core.nfce'),
        ),
    ]
